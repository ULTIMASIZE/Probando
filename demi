-- === 1) Último DISPUTE por pz_ins_key (trae case_id, cm15, etc.) ===
WITH dispute_latest AS (
  SELECT
    d.pz_ins_key,
    d.cov_inskey,
    d.case_id,
    d.case_type,
    d.case_sta,
    d.case_mode,
    d.cm15,
    d.cstone_last_updatetm,
    ROW_NUMBER() OVER (
      PARTITION BY d.pz_ins_key
      ORDER BY d.cstone_last_updatetm DESC
    ) AS rn
  FROM `axp-lumi.dw.gdm_dispute` d
),

-- === 2) Último ResolveCase por case_id desde EVENT (latest_rslv_dt) ===
event_latest AS (
  SELECT
    e.case_id,
    DATE(e.event_ts_gmt) AS latest_rslv_dt
  FROM `axp-lumi.dw.gdm_event` e
  WHERE e.event_type = 'Task'
    AND e.event_id   = 'ResolveCase'
  QUALIFY ROW_NUMBER() OVER (
    PARTITION BY e.case_id
    ORDER BY e.event_ts_gmt DESC
  ) = 1
),

-- === 3) Desencripta cust_lst_nm desde CLIC para joinear y traer latest_rslv_note ===
clic_decrypted AS (
  SELECT
    `axp-lumi`.dw.decrypt_sde(
      `axp-lumi`.dw.get_sde_tag('cust_lst_nm','gsn_clic_case_detail'),
      cust_lst_nm
    ) AS cust_lst_nm_decrip,
    latest_rslv_note
  FROM `axp-lumi.dw.gsn_clic_case_detail`
),

-- === 4) Último ajuste por caso (usando SUBSTR del pz_ins_key) ===
adj_latest AS (
  SELECT
    SUBSTR(pz_ins_key, 25, 11) AS case_id_sub,
    adj_type AS adj_type1,
    adj_ts_gmt
  FROM `axp-lumi.dw.gdm_adjustment`
  WHERE adj_or_liab_shft = 'Adjustment'
  QUALIFY ROW_NUMBER() OVER (
    PARTITION BY SUBSTR(pz_ins_key, 25, 11)
    ORDER BY adj_ts_gmt DESC
  ) = 1
),

-- === 5) Última carta por caso (para no duplicar filas) ===
letter_latest AS (
  SELECT
    SUBSTR(lr.pz_ins_key, 25, 11) AS case_id_sub,
    lr.slct_ltr_id,
    lr.ltr_ds,
    lr.creat_ts_gmt,
    ROW_NUMBER() OVER (
      PARTITION BY SUBSTR(lr.pz_ins_key, 25, 11)
      ORDER BY lr.creat_ts_gmt DESC
    ) AS rn
  FROM `axp-lumi.dw.gdm_letter_req` lr
),

-- === 6) Último mkt_cd por pz_ins_key desde CLAIM (para filtrar mkt_cd='005') ===
claim_mkt_latest AS (
  SELECT
    c.pz_ins_key,
    c.mkt_cd,
    ROW_NUMBER() OVER (
      PARTITION BY c.pz_ins_key
      ORDER BY c.cstone_last_updatetm DESC
    ) AS rn
  FROM `axp-lumi.dw.gdm_claim` c
)

-- === 7) SELECT final con joins y filtros ===
SELECT DISTINCT
  dl.case_id,                              -- case_id (gdm_dispute)
  ev.latest_rslv_dt,                       -- último ResolveCase (gdm_event)
  dl.cm15,                                 -- cm15 (gdm_dispute)
  adj.adj_type1,                           -- ajuste más reciente
  clic.latest_rslv_note,                   -- nota desde CLIC (descifrado)
  ll.slct_ltr_id,
  ll.ltr_ds,
  DATE(ll.creat_ts_gmt) AS creat_ts_gmt,
  mk.mkt_cd                                 -- para ver el código de mercado usado en el filtro
FROM dispute_latest dl
LEFT JOIN event_latest ev
  ON ev.case_id = dl.case_id
LEFT JOIN adj_latest adj
  ON adj.case_id_sub = dl.case_id
LEFT JOIN clic_decrypted clic
  ON dl.case_id = clic.cust_lst_nm_decrip
LEFT JOIN letter_latest ll
  ON dl.case_id = ll.case_id_sub AND ll.rn = 1
-- Importante: claim se joinea por el INSKEY de DISPUTE ↔ pz_ins_key de CLAIM
LEFT JOIN claim_mkt_latest mk
  ON dl.cov_inskey = mk.pz_ins_key AND mk.rn = 1
WHERE
  dl.rn = 1
  AND dl.case_type = 'Dispute'
  AND dl.case_sta  = 'Resolved-Completed'
  AND dl.case_mode IN ('E2E','SPLIT','ISSUER')
  AND ev.latest_rslv_dt BETWEEN '2025-08-25' AND '2025-09-10'  -- ajustá rango si corresponde
  AND mk.mkt_cd = '005'                                        -- filtro por mkt_cd
;
