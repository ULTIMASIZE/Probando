import pandas as pd

# Ruta completa o relativa del archivo de Excel
archivo_excel = r"C:\ruta\completa\archivo.xlsx"  # Cambia esta ruta al archivo correcto
hoja = "Hoja1"  # Cambia al nombre de la hoja en el archivo de Excel

try:
    # Leer el archivo de Excel
    df = pd.read_excel(archivo_excel, sheet_name=hoja)
    
    # Filtrar casos mayores o iguales a 60 en la columna R
    df_filtrado_r = df[df["R"] >= 60]
    
    # Contar casos pendientes ("Pending", "Pending (Other)", "Pending Approval") por columna E
    estados_pendientes = ["Pending", "Pending (Other)", "Pending Approval"]
    df_pendientes = df_filtrado_r[df_filtrado_r["M"].isin(estados_pendientes)]
    pendientes_por_e = df_pendientes.groupby("E").size()
    
    # Contar casos "Open" o "New" según la categoría en la columna N, agrupados por columna E
    estados_abiertos = ["Open", "New"]
    df_abiertos = df_filtrado_r[df_filtrado_r["M"].isin(estados_abiertos)]
    abiertos_por_e_y_categoria = df_abiertos.groupby(["E", "N"]).size()
    
    # Mostrar resultados
    print("Casos pendientes ('Pending', 'Pending (Other)', 'Pending Approval') por cada valor único en la columna E:")
    print(pendientes_por_e)
    print("\nCasos 'Open' o 'New' según la categoría en la columna N, agrupados por columna E:")
    print(abiertos_por_e_y_categoria)
    
    # Guardar resultados en archivos Excel (opcional)
    pendientes_por_e.to_excel("pendientes_por_e.xlsx", header=["Total Pendientes"], index_label="Nombre")
    abiertos_por_e_y_categoria.to_excel("abiertos_por_e_y_categoria.xlsx", header=["Total Abiertos"], index_label=["Nombre", "Categoría"])
    print("\nArchivos guardados como 'pendientes_por_e.xlsx' y 'abiertos_por_e_y_categoria.xlsx'.")
    
except FileNotFoundError:
    print(f"No se encontró el archivo en la ruta especificada: {archivo_excel}")
except KeyError as e:
    print(f"La columna especificada no existe: {e}")
except Exception as e:
    print(f"Ocurrió un error: {e}")
